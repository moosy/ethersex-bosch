#!/usr/bin/perl
#
# Copyright(C) 2010 Gerd v. Egidy <gerd@egidy.de>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
#
#######################################################################
#
# This program sends a reset-pulse to an Arduino-compatible device.
#
# The reset may be needed to initiate the serial bootloader installed
# on these devices. The bootloader is only active for a short time
# so make sure to start avrdude directly after sending the reset.
#
# How it works: The Arduino-compatible devices use a FT232R as
# USB<->serial interface. The DTR-line is connected to the reset
# of the AVR. So pulsing DTR initiates a reset.

use Device::SerialPort;

$portname=$ARGV[0];

if (! defined($portname) || $portname eq "")
{
   die "ERROR: no serial device given.\nusage: reset <path-to-serial-device>";
}

Device::SerialPort->new($portname)->pulse_dtr_on(100);
