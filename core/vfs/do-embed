#! /bin/bash

#
# Copyright (c) 2008 by Stefan Siegl <stesie@brokenpipe.de>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by 
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
# For more information on the GPL, please go to:
# http://www.gnu.org/copyleft/gpl.html
#

STAT_ARGS="-c %s"
[ `uname` = "FreeBSD" ] && STAT_ARGS="-f %z"

(cat <<EOF
#include <avr/pgmspace.h>
SPM_PAGESIZE
EOF
) > dummy.c || exit 1

$MAKE dummy.E || exit 1
PAGESZ=$(tail -n 1 dummy.E)

fgrep -q "#define DEBUG_INLINE_DUMMY" autoconf.h || rm -f dummy.[cE]

echo "The pagesize of current architecture is $PAGESZ."

do_strip=false
fgrep -q "#define VFS_INLINE_HTML_CLEAN_SUPPORT" autoconf.h &&  do_strip=true

while true; do
  fn="$1"; shift
  test "x$fn" = "x" && {
    SZ=$(stat ${STAT_ARGS} ethersex.bin)
    echo "Final size of ethersex.bin is $SZ."
    exit 0
  }
  >/dev/null
  if [ ! -e "$fn" ]; then 
    continue
  fi
  unzipped=$(echo "$fn" | sed 's/\.gz$//')
  do_gzip=true
  fgrep -q "#define DEBUG_INLINE_DISABLE_GZ" autoconf.h &&  do_gzip=false
  fgrep -q "#define UPNP_INLINE_SUPPORT" autoconf.h && [ "${fn/#*./}" = "xml" ]  && do_gzip=false

  if  [ "$do_gzip" = "true" ]; then
    # before zipping, squeeze unnecessary bits out
    tempfn="${fn}.temp~"

    if [ "$do_strip" = "true" ]; then
      echo "Stripping $fn ..."
      case "$fn" in
        # XHTML/HTML files
        *.ht)
          # strip leading spaces in scripts and before tags;
          # in scripts also ignore comment lines as well as empty lines;
          # take care of preformatted text
          perl -e 'my @x = <>;
                   # try HTML::Clean if it is installed
                   if (eval{ require HTML::Clean }) {
                     my $x = join("", @x);
                     my $h = HTML::Clean->new(\$x,9);
                     $h->strip({whitespace => (grep(/<pre\b/,@x) ? 0 : 1)});
                     print ${$h->data};
                   }
                   else {
                     map { if (m:<script\b: .. m:</script\b:) {
                             s/^\s+//;
                             s/^.*$// if (m:^\s*//:);
                           }
                           s/^\s+</</ if (!(m:<pre\b: ..m:</pre\b:));
                         } @x;
                     print join("", grep(/./,@x));
                   }' < "$fn" > "$tempfn"
          ;;
        # JavaScript files
        *.js)
          # strip leading spaces, ignore comment lines & empty lines
          perl -n -e 's/^\s+//;
                      print if ((!m:^//:) && (!/^$/))' < "$fn" > "$tempfn"
          ;;
        # CSS files
        *.c)
          # strip unnecessary spaces, unwrap rules, ignore empty lines
          perl -p -0777 -e 's/^\s+//g;
                            s/\s+/ /g;
                            s/\n/ /g;
                            s/\s*}\s*/}\n/g;
                            s/\s*{\s*/ {/g;' < "$fn" > "$tempfn"
          ;;
        # all other files
        *)
          cp "$fn" "$tempfn"
          ;;
      esac
    else
      cp "$fn" "$tempfn"
    fi

    gzip -c  -9 < "$tempfn" > "$fn.gz"

    rm -f "$tempfn"
  fi

  echo Embedding $fn ...
  core/vfs/vfs-concat ethersex.bin $PAGESZ "$fn" > ethersex.embed.bin || exit 1
  mv -f ethersex.embed.bin ethersex.bin

  fgrep -q "#define DEBUG_INLINE_GZ" autoconf.h || rm -f "$fn".gz 
done

